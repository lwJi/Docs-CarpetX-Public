# Configuration for an frontera installation: gcc

# Whenever this version string changes, the application is configured 
# and rebuilt from scratch 
VERSION = frontera-2022-11-22

CPP = cpp
FPP = cpp
CC  = gcc
CXX = nvcc --compiler-bindir g++ -x cu
F90 = gfortran
LD = nvcc --compiler-bindir g++

CPPFLAGS = -DSIMD_CPU
CFLAGS   = -pipe -g3 -std=gnu11
CXXFLAGS = -pipe -g3 --compiler-options -std=c++17 --compiler-options -std=gnu++17 --expt-relaxed-constexpr --extended-lambda --gpu-architecture sm_70 --forward-unknown-to-host-compiler --Werror ext-lambda-captures-this --relocatable-device-code=true --objdir-as-tempdir
FPPFLAGS = -traditional
F90FLAGS = -pipe -g3 -fcray-pointer -ffixed-line-length-none
CUCCFLAGS = -std=c++17

#CUCC = nvcc
#CUCCFLAGS = -std=c++14 -I/opt/apps/cuda/11.3/include #-L/opt/apps/cuda/11.3/lib64
#LDFLAGS  = -rdynamic
#LDFLAGS = -Wl,-rpath,/opt/apps/cuda/11.3/lib64 -Wl,-rpath,/home1/08708/liwei/Cactus_cuda/view/lib -Wl,-rpath,/home1/08708/liwei/Cactus_cuda/view/lib64
#LIBDIRS = /opt/apps/cuda/11.3/lib64
LIBS = nvToolsExt

C_LINE_DIRECTIVES = yes
F_LINE_DIRECTIVES = yes

DEBUG           = yes
CPP_DEBUG_FLAGS = -DCARPET_DEBUG
C_DEBUG_FLAGS = -fbounds-check -fsanitize=undefined -fstack-protector-all -ftrapv
CXX_DEBUG_FLAGS = -fbounds-check -fsanitize=undefined -fstack-protector-all -ftrapv -lineinfo
FPP_DEBUG_FLAGS = -DCARPET_DEBUG
F90_DEBUG_FLAGS = -fcheck=bounds,do,mem,pointer,recursion -finit-character=65 -finit-integer=42424242 -finit-real=nan -fsanitize=undefined -fstack-protector-all -ftrapv

OPTIMISE           = no
C_OPTIMISE_FLAGS = -O3 -fcx-limited-range -fexcess-precision=fast -fno-math-errno -fno-rounding-math -fno-signaling-nans -funsafe-math-optimizations
CXX_OPTIMISE_FLAGS = -O3 -fcx-limited-range -fexcess-precision=fast -fno-math-errno -fno-rounding-math -fno-signaling-nans -funsafe-math-optimizations
F90_OPTIMISE_FLAGS = -O3 -fcx-limited-range -fexcess-precision=fast -fno-math-errno -fno-rounding-math -fno-signaling-nans -funsafe-math-optimizations

#PROFILE           = no
#CPP_PROFILE_FLAGS =
#FPP_PROFILE_FLAGS =
#C_PROFILE_FLAGS   = -pg
#CXX_PROFILE_FLAGS = -pg
#F77_PROFILE_FLAGS = -pg
#F90_PROFILE_FLAGS = -pg

OPENMP           = yes
CPP_OPENMP_FLAGS = -fopenmp
FPP_OPENMP_FLAGS = -D_OPENMP

WARN           = yes
#CPP_WARN_FLAGS = -Wall
#C_WARN_FLAGS =
#CXX_WARN_FLAGS =
#FPP_WARN_FLAGS = -Wall
#F90_WARN_FLAGS = -Wall -Wshadow -Wsurprising

# CUDA does not support these
DISABLE_INT16 = yes
DISABLE_REAL16 = yes

VECTORISE = no

MPI_DIR = /opt/intel/compilers_and_libraries_2020.4.304/linux/mpi
MPI_LIB_DIRS = /opt/intel/compilers_and_libraries_2020.4.304/linux/mpi/intel64/lib/release
MPI_INC_DIRS = /opt/intel/compilers_and_libraries_2020.4.304/linux/mpi/intel64/include
MPI_LIBS = mpi

GSL_DIR = /opt/apps/intel19/gsl/2.6
FFTW3_DIR = /opt/apps/intel19/impi19_0/fftw3/3.3.10
#BOOST_DIR = /home1/08708/liwei/Cactus_cuda/view
#PETSC_DIR = /usr
#PETSC_ARCH_LIBS = m
HWLOC_DIR = /opt/apps/hwloc/1.11.12

BLAS_DIR = NO_BUILD
BLAS_LIBS = # /opt/intel/compilers_and_libraries_2020.1.217/linux/mkl/lib/intel64
OPENBLAS_DIR = NO_BUILD
OPENBLAS_LIBS = # /opt/intel/compilers_and_libraries_2020.1.217/linux/mkl/lib/intel64
LAPACK_DIR = NO_BUILD
LAPACK_LIBS = # /opt/intel/compilers_and_libraries_2020.1.217/linux/mkl/lib/intel64

PTHREADS_DIR = NO_BUILD

ADIOS2_DIR = /home1/08708/liwei/Cactus_cuda/view
ADIOS2_LIB_DIRS = /home1/08708/liwei/Cactus_cuda/view/lib64
AMREX_DIR = /home1/08708/liwei/Cactus_cuda/view
NSIMD_DIR = /home1/08708/liwei/Cactus_cuda/view
NSIMD_ARCH = AVX2
NSIMD_OPTIONS =  #AVX2 FMA
OPENPMD_API_DIR = /home1/08708/liwei/Cactus_cuda/view
OPENPMD_DIR = /home1/08708/liwei/Cactus_cuda/view
SSHT_DIR = /home1/08708/liwei/Cactus_cuda/view
SILO_DIR = /home1/08708/liwei/Cactus_cuda/view
YAML_CPP_DIR = /home1/08708/liwei/Cactus_cuda/view
ZLIB_DIR = /home1/08708/liwei/Cactus_cuda/view
